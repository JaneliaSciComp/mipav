//----------------------------------------------------------------------------
void v_CalcNormalsPerSlice_Pass2
(
    in float4        kModelPosition  : POSITION,
    in float3        kInBaseTCoord : TEXCOORD0,
    out float4       kClipPosition : POSITION,
    out float3       kOutBaseTCoord : TEXCOORD0,
    uniform float4x4 WVPMatrix)
{
    // Transform the position from model space to clip space.
    kClipPosition = mul(kModelPosition,WVPMatrix);

    // Pass through the texture coordinate.
    kOutBaseTCoord = kInBaseTCoord;
}
//----------------------------------------------------------------------------
void p_CalcNormalsPerSlice_Pass2
(
    in float3         kBaseTCoord : TEXCOORD0,
    out float4        kPixelColor : COLOR,
    uniform float4    StepSize,
    uniform sampler3D VolumeCalc
    )
{
    float3 index1 = kBaseTCoord; index1.x -= StepSize.x;
    float3 index2 = kBaseTCoord; index2.x += StepSize.x;
    float3 index3 = kBaseTCoord; index3.y -= StepSize.y;
    float3 index4 = kBaseTCoord; index4.y += StepSize.y;
    float3 index5 = kBaseTCoord; index5.z -= StepSize.z;
    float3 index6 = kBaseTCoord; index6.z += StepSize.z;
    float4 color = tex3D( VolumeCalc, kBaseTCoord );
    kPixelColor.a = color.a;

    color.xyz = color.xyz - (0.5, 0.5, 0.5);
    color.xyz += (tex3D( VolumeCalc, index1 ).xyz - (0.5, 0.5, 0.5));
    color.xyz += (tex3D( VolumeCalc, index2 ).xyz - (0.5, 0.5, 0.5));
    color.xyz += (tex3D( VolumeCalc, index3 ).xyz - (0.5, 0.5, 0.5));
    color.xyz += (tex3D( VolumeCalc, index4 ).xyz - (0.5, 0.5, 0.5));
    color.xyz += (tex3D( VolumeCalc, index5 ).xyz - (0.5, 0.5, 0.5));
    color.xyz += (tex3D( VolumeCalc, index6 ).xyz - (0.5, 0.5, 0.5));
    color.xyz = normalize(color.xyz);
    color.xyz += 1.0;
    color.xyz /= 2.0;
    kPixelColor.rgb = color.xyz;
}
//----------------------------------------------------------------------------
