/**
 * Clip the volume based on the x,y,z axes.
 * returns 1 when the volume is clipped, 0 when not clipped.
 */
bool myClip ( float3 myVec,
              float clipX,
              float clipXInv,
              float clipY,
              float clipYInv,
              float clipZ,
              float clipZInv )
{
    if ( myVec.x > clipX )
    {
        return true;
    }
    if ( myVec.x < clipXInv )
    {
        return true;
    }
    if ( myVec.y > clipY )
    {
        return true;
    }
    if ( myVec.y < clipYInv )
    {
        return true;
    }
    if ( myVec.z > clipZ )
    {
        return true;
    }
    if ( myVec.z < clipZInv )
    {
        return true;
    }
    return false;
}

void v_SurfaceClip(
                     in float4        kModelPosition  : POSITION,
                     in float4        kModelColor0 : COLOR0,
                     in float3        kInBaseTCoord : TEXCOORD0,
                     out float4       kClipPosition : POSITION,
                     out float3       kInVolumeClipPos,
                     out float4       kInColor0,
                     uniform float4    SurfaceScale,
                     uniform float4x4 WVPMatrix)
{
    if ( SurfaceScale.w != 0 )
    {
        kModelPosition.x *= 2.0/SurfaceScale.x;
        kModelPosition.y *= 2.0/SurfaceScale.y;
        kModelPosition.z *= 2.0/SurfaceScale.z;
    }
    // Transform the position from model space to clip space.
    kClipPosition = mul(kModelPosition,WVPMatrix);
    kInVolumeClipPos = kInBaseTCoord;
    kInColor0 = kModelColor0;
}

void p_SurfaceClip(
                     out float4       kVertexColor : COLOR,
                     in float3        kInVolumeClipPos,
                     in float4       kInColor0,
                     uniform float clipX,
                     uniform float clipXInv,
                     uniform float clipY,
                     uniform float clipYInv,
                     uniform float clipZ,
                     uniform float clipZInv)
{
    // axis-aligned clipping:
    if ( myClip( kInVolumeClipPos, clipX, clipXInv, clipY, clipYInv, clipZ, clipZInv ) )
    {
        discard;
    }
    kVertexColor = kInColor0;
}
